-- [[ –º–µ–Ω—è–π —ç—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ ]]
getgenv().Optimization = {
    state = true, -- –≤–∫–ª/–≤—ã–∫–ª
    hide_screen = true, -- –≤—ã–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ—Ä–∏—Å–æ–≤–∫—É –≥—Ä–∞—Ñ–∏–∫–∏, –±—É—Å—Ç–∏—Ç –∂–µ—Å—Ç–æ—á–∞–π—à–µ —Ñ–ø—Å (–≤–∫–ª/–≤—ã–∫–ª)
    fps = 5
};

if getgenv().Optimization.state then
    if setfpscap ~= nil then setfpscap(getgenv().Optimization.fps); end
    UserSettings().GameSettings.MasterVolume = 0;
    settings().Rendering.QualityLevel = "Level01";
    game:GetService("RunService"):Set3dRenderingEnabled(not getgenv().Optimization.hide_screen);
end

local players = game:GetService("Players");
local local_player = players.LocalPlayer;
local rifts = workspace:FindFirstChild("Rendered"):FindFirstChild("Rifts");
local whitelisted_eggs = { -- —Ç–µ–ø–µ—Ä—å —Ç—É—Ç –º–µ–Ω—è–µ—à—å –≤–µ–±—Ö—É–∫–∏ –ù–ê –ö–ê–ñ–î–û–ï –Ø–ô–¶–û/–°–£–ù–î–£–ö, –≤ luck —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ –∫–∞–≤—ã—á–∫–∞—Ö –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ—à—å –º–Ω–æ–∂–∏—Ç–µ–ª—å —É–¥–∞—á–∏
    ["rainbow-egg"] = {
        webhook = "https://discord.com/api/webhooks/1369680016367161465/ytWtBI3H3EKVrjifey0KMsJ05wEtuy1cdMV7EvJ5OX6cb128k36s17sS8EYM7pCXkxkg",
        role_id = 0,
        luck = { "x25" },
        name = "Rainbow Egg"
    },
    ["nightmare-egg"] = {
        webhook = "https://discord.com/api/webhooks/1369679913308655828/es2UQtG9m_FY_aYotNaVKpFNwDXj0IOakFJg3g8lQ107fAHPJWoUqvU_1_RLEpCGUmIJ",
        role_id = 0,
        luck = { "x25" },
        name = "Nightmare Egg"
    },
    ["void-egg"] = {
        webhook = "https://discord.com/api/webhooks/1369680094322364446/vkkzcYcVY30Tb-D2MRZMrQbR3d2U_0YCdevjgPR2QTaEjFcFs8b7uZbEi-C5u60Bum6N",
        role_id = 0,
        luck = { "x25" },
        name = "Void Egg"
    },
    ["royal-chest"] = {
        webhook = "https://discord.com/api/webhooks/1369320116969541702/217cjweQ3Aga1IwwBzClwuNpe2KoXRKOq2IJMCV9sgzlEpd9iYHH2UJ89IT4qq8smumE",
        role_id = 0,
        name = "Royal Chest"
    },
    ["bubble-rift"] = {
        webhook = "https://discord.com/api/webhooks/1369680404487077958/pNTDbV_qBHqzTKXrxagTlqMyFgc13qmtRha8ca1Fkn9AdlnFgjT977lDU9A8Tavw1Ju9",
        role_id = 0,
        name = "Bubble Rift"
    },
    ["silly-egg"] = {
        webhook = "https://discord.com/api/webhooks/1369679726079250556/x9d_fCkwW-oLKaBE1yQxGenYnkVt3n_HgolUed6-xLRyVvh5MQED22AX8beYs4mSnwud",
        role_id = 0,
        luck = { "x10" },
        name = "Silly Egg"
    },
    ["mining-egg"] = {
        webhook = "https://discord.com/api/webhooks/1369680163113140354/KSzLYRiJMmYeeGOv4aSekxlVxrxihddZrvyJ_AfAtwDZsLCCYwXMvYq7HrEfP1N6tJjH",
        role_id = 0,
        luck = { "x25" },
        name = "Mining Egg"
    },
    ["cyber-egg"] = {
        webhook = "https://discord.com/api/webhooks/1369680252145504256/OEFlHbKAzOuz6kZ97gcgsNyDrBR6wMBNlwiaIXWVNTeXUM5yIDLPGstTawfPE4Lx6a6R",
        role_id = 0,
        luck = { "x25" },
        name = "Cyber Egg"
    },
    ["dice-rift"] = {
        webhook = "https://discord.com/api/webhooks/1369680321729138718/s6R5cyeB3k9sBAD4Akxaem86xzxW4-6lNWgs-V5P2TDH86pxWl7mT1Wwvs-XfN4O-GVS",
        role_id = 0,
        name = "Dice Rift"
    },
    ["underworld-1"] = {
        webhook = "https://discord.com/api/webhooks/1369680321729138718/s6R5cyeB3k9sBAD4Akxaem86xzxW4-6lNWgs-V5P2TDH86pxWl7mT1Wwvs-XfN4O-GVS",
        role_id = 0,
        luck = { "x25" },
        name = "Underworld 1"
    },
    ["underworld-2"] = {
        webhook = "https://discord.com/api/webhooks/1369680321729138718/s6R5cyeB3k9sBAD4Akxaem86xzxW4-6lNWgs-V5P2TDH86pxWl7mT1Wwvs-XfN4O-GVS",
        role_id = 0,
        luck = { "x25" },
        name = "Underworld 2"
    },
    ["underworld-3"] = {
        webhook = "https://discord.com/api/webhooks/1369680321729138718/s6R5cyeB3k9sBAD4Akxaem86xzxW4-6lNWgs-V5P2TDH86pxWl7mT1Wwvs-XfN4O-GVS",
        role_id = 0,
        luck = { "x25" },
        name = "Underworld 3"
    }
};
local spam_messages = {
    "Best Rift Finder = ƒ£ƒ£/ easyriftüöÄ",
    "Silly Egg is found! ƒ£ƒ£/ easyriftü•ö",
    "Best Pet Shop = ƒ£ƒ£/ easyriftüê∂",
    "REACH THE LEADERBOARDS USING ƒüƒü/ easyriftüèÜ",
    "SECRETS GIVE-AWAY HAPPENING ƒ£ƒ£/ easyriftüê∂",
    "X25 LUCK RIFTS AT ƒ£ƒ£/ easyriftüçÄ",
    "GET SILLY EGG AT ƒ£ƒ£/ easyriftü•ö",
    "UNDERWORLD RIFT ƒ£ƒ£/ easyriftü•ö",
};

local join_code = string.format('game.TeleportService:TeleportToPlaceInstance(%d, "%s", game.Players.LocalPlayer)', game.PlaceId, game.JobId);
local join_link = string.format('https://www.roblox.com/games/start?placeId=16302670534&launchData=%d/%s', game.PlaceId, game.JobId);

local parse_time = function(text)
    text = string.lower(string.gsub(text, "^%s*(.-)%s*$", "%1"));
    local number, unit = string.match(text, "(%d+)%s*(%a+)");
    if number == nil or unit == nil then 
        return 0;
    end
    
    number = tonumber(number);
    
    if string.find(unit, "second") then
        return number;
    elseif string.find(unit, "minute") then
        return number * 60;
    elseif string.find(unit, "hour") then
        return number * 3600;
    else
        return 0;
    end
end

local time_to_discorddate = function(time_)
    return string.format("<t:%d:R>", time_);
end

local request = (syn ~= nil and syn.request) or (http ~= nil and http.request) or (fluxus ~= nil and fluxus.request) or http_request or request;
local notify = function(webhook, data)
    return request({Url = webhook, Body = game:GetService("HttpService"):JSONEncode(data), Method = "POST", Headers = { ['content-type'] = "application/json" }});
end

-- –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è, –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –ø–æ—Ç–æ–∫ —Å–µ—Ä–≤–µ—Ä-—Ö–æ–ø–∞
local serverHopThreadActive = false

local serverhop = function()
    -- –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤
    if not _G.ServerHistory then
        _G.ServerHistory = {}
    end
    
    -- –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
    local servers = {}
    
    -- –ò—Å–ø–æ–ª—å–∑—É–µ–º pcall –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
    local success, result = pcall(function()
        local api = request({
            Url = string.format("https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100", game.PlaceId)
        })
        return game:GetService("HttpService"):JSONDecode(api.Body)
    end)
    
    if not success then
        warn("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤: " .. tostring(result))
        -- –ü—Ä–æ—Å—Ç–æ–π —Ç–µ–ª–µ–ø–æ—Ä—Ç –Ω–∞ —Ç–æ—Ç –∂–µ –ø–ª–µ–π—Å, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤
        game:GetService("TeleportService"):Teleport(game.PlaceId, local_player)
        return
    end
    
    for i, v in pairs(result.data) do
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–ª–Ω—ã–π –ª–∏ —Å–µ—Ä–≤–µ—Ä, –Ω–µ —Ç–µ–∫—É—â–∏–π –ª–∏ —ç—Ç–æ —Å–µ—Ä–≤–µ—Ä, –∏ –Ω–µ –ø–æ—Å–µ—â–∞–ª–∏ –ª–∏ –º—ã –µ–≥–æ –Ω–µ–¥–∞–≤–Ω–æ
        if v.playing < v.maxPlayers and v.id ~= game.JobId and not _G.ServerHistory[v.id] then
            table.insert(servers, v)
        end
    end
    
    if #servers > 0 then
        -- –ë–µ—Ä–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
        local selectedServer = servers[math.random(1, #servers)]
        
        -- –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –∏—Å—Ç–æ—Ä–∏—é, —á—Ç–æ–±—ã –Ω–µ –ø–æ–ø–∞—Å—Ç—å –Ω–∞ –Ω–µ–≥–æ —Å–Ω–æ–≤–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è
        _G.ServerHistory[selectedServer.id] = os.time()
        
        -- –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –æ—Ç —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π (—Å—Ç–∞—Ä—à–µ 10 –º–∏–Ω—É—Ç)
        for id, timestamp in pairs(_G.ServerHistory) do
            if os.time() - timestamp > 600 then -- 10 –º–∏–Ω—É—Ç
                _G.ServerHistory[id] = nil
            end
        end
        
        -- –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º—Å—è –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
        pcall(function()
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, selectedServer.id, local_player)
        end)
        
        -- –ñ–¥–µ–º –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã —Ç–µ–ª–µ–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
        task.wait(5)
        
        -- –ï—Å–ª–∏ –º—ã –≤—Å–µ –µ—â–µ –∑–¥–µ—Å—å, –∑–Ω–∞—á–∏—Ç —Ç–µ–ª–µ–ø–æ—Ä—Ç –Ω–µ —É–¥–∞–ª—Å—è, –ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä
        if game.JobId == game:GetService("Players").LocalPlayer.JobId then
            warn("–¢–µ–ª–µ–ø–æ—Ä—Ç –Ω–µ —É–¥–∞–ª—Å—è, –ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä")
            serverhop()
        end
    else
        -- –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤, –ø—Ä–æ—Å—Ç–æ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º—Å—è –Ω–∞ —Ç–æ—Ç –∂–µ –ø–ª–µ–π—Å
        warn("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤, —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º—Å—è –Ω–∞ —Ç–æ—Ç –∂–µ –ø–ª–µ–π—Å")
        game:GetService("TeleportService"):Teleport(game.PlaceId, local_player)
    end
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å serverhop
task.spawn(function()
    if serverHopThreadActive then return end
    serverHopThreadActive = true
    
    -- –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–∏—Ñ—Ç–æ–≤
    task.wait(5)
    
    while true do
        task.wait(15) -- –ñ–¥–µ–º 15 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏ —Å–º–µ–Ω—ã —Å–µ—Ä–≤–µ—Ä–∞
        
        -- –í—ã–∑—ã–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä-—Ö–æ–ø –≤ –∑–∞—â–∏—â–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
        local success, err = pcall(serverhop)
        if not success then
            warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ serverhop: " .. tostring(err))
            -- –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
            task.wait(5)
        end
    end
end)

task.spawn(function() -- anti afk (xz zachem, poidet)
    for _,v in pairs(getconnections(local_player.Idled)) do v:Disable() end
    for _,v in pairs(getconnections(game:GetService("UserInputService").WindowFocused)) do v:Disable() end
    for _,v in pairs(getconnections(game:GetService("UserInputService").WindowFocusReleased)) do v:Disable() end
end)

task.spawn(function()
    local success, channel
    
    -- –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–∞–Ω–∞–ª —á–∞—Ç–∞
    success, channel = pcall(function()
        return game:GetService("TextChatService"):WaitForChild("TextChannels", 5):WaitForChild("RBXGeneral", 5)
    end)
    
    if not success or not channel then
        warn("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª —á–∞—Ç–∞ —á–µ—Ä–µ–∑ TextChatService")
        -- –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å—Ç–∞—Ä–æ–π —Å–∏—Å—Ç–µ–º—ã —á–∞—Ç–∞
        pcall(function()
            while task.wait(math.random(1, 6)) do
                local message = spam_messages[math.random(1, #spam_messages)]
                game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
            end
        end)
        return
    end
    
    local time = 1;
    -- –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
    local randomGen = Random.new()
    
    while task.wait() do
        pcall(function()
            channel:SendAsync(spam_messages[randomGen:NextInteger(1, #spam_messages)])
        end)
        
        time += 2;
        if time > 6 then
            time = 1;
        end

        task.wait(time);
    end
end)

do
    for _, rift in pairs(rifts:GetChildren()) do
        if not rift:IsA("Model") or not whitelisted_eggs[rift.Name] then
            continue;
        end

        local data = whitelisted_eggs[rift.Name];
        local luck = "None";
        local gui
        
        -- –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å GUI
        pcall(function()
            gui = rift:FindFirstChild("Display"):FindFirstChildOfClass("SurfaceGui")
        end)
        
        if data.luck ~= nil then
            if gui == nil then
                pcall(function()
                    -- –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è GUI
                    local startTime = tick()
                    repeat 
                        task.wait(0.1)
                        gui = rift:FindFirstChild("Display"):FindFirstChildOfClass("SurfaceGui")
                    until gui ~= nil or tick() - startTime > 5
                end)
            end
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            if gui and gui:FindFirstChild("Icon") and gui.Icon:FindFirstChild("Luck") then
                if not table.find(data.luck, gui.Icon.Luck.Text) then
                    continue
                end

                luck = gui.Icon.Luck.Text
            else
                warn("GUI –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω—É–∂–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è: " .. rift.Name)
                continue
            end
        end

        -- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–π–º–µ—Ä–∞
        if not gui or not gui:FindFirstChild("Timer") then
            warn("–≠–ª–µ–º–µ–Ω—Ç Timer –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è: " .. rift.Name)
            continue
        end

        local time = os.time() + parse_time(gui.Timer.Text);
        local discord_time = time_to_discorddate(time);
        local height = math.floor(rift:GetPivot().Position.Y) - 4;
        local message = {
            ['content'] = string.format("<@%d>", data.role_id),
            ['embeds'] = {
                { 
                    ['title'] = string.format("**%s has been found!**", data.name), 
                    ['fields'] = {
                        {
                            ['name'] = "**‚è≤ Expires in**",
                            ['value'] = discord_time,
                            ['inline'] = true
                        },
                        {
                            ['name'] = "**üìè Height**",
                            ['value'] = string.format("`%d`", height),
                            ['inline'] = true
                        },
                        {
                            ['name'] = "**üë§ Players**",
                            ['value'] = string.format("`%d`", #players:GetPlayers()),
                            ['inline'] = true
                        },
                        {
                            ['name'] = "**üçÄ Luck**",
                            ['value'] = string.format("`%s`", luck)
                        },
                        {
                            ['name'] = "**üîó Join link**",
                            ['value'] = join_link
                        },
                        {
                            ['name'] = "**üë®‚Äçüíª Join script**",
                            ['value'] = string.format("```%s```", join_code)
                        }
                    },
                    ['color'] = 4508791,
                    ['timestamp'] = DateTime.now():ToIsoDate()
                }
            }
        };

        notify(data.webhook, message);
    end
    -- –ù–µ –Ω—É–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å serverhop –∑–¥–µ—Å—å, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —É–∂–µ –∑–∞–ø—É—â–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
end

game:GetService("CoreGui"):FindFirstChild("RobloxPromptGui"):FindFirstChild("promptOverlay").ChildAdded:Connect(function(child) -- –ø—Ä–∏ –∫–∏–∫–µ –∏–≥—Ä–æ–π
    pcall(serverhop)
end)
