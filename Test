-- [[ –º–µ–Ω—è–π —ç—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ ]]
getgenv().Optimization = {
    state = true, -- –≤–∫–ª/–≤—ã–∫–ª
    hide_screen = true, -- –≤—ã–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ—Ä–∏—Å–æ–≤–∫—É –≥—Ä–∞—Ñ–∏–∫–∏, –±—É—Å—Ç–∏—Ç –∂–µ—Å—Ç–æ—á–∞–π—à–µ —Ñ–ø—Å (–≤–∫–ª/–≤—ã–∫–ª)
    fps = 10
};

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø–∞ –∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–≤
getgenv().ServerHopSettings = {
    interval = 15, -- –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø–∞–º–∏ (15 —Å–µ–∫—É–Ω–¥)
    last_hop_time = os.time() - math.random(0, 15), -- —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –Ω–∞—á–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Ä–∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    use_random_offset = true, -- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏ —Ä–∞–Ω–¥–æ–º–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ —Ö–æ–ø–æ–º
    min_players = 2, -- –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
    max_players = 10, -- –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ (–∏–∑ 50)
    history_ttl = 900  -- –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ (15 –º–∏–Ω—É—Ç)
};

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø–∞
getgenv().ServerProtection = {
    last_servers = {}, -- –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å–µ—Ä–≤–µ—Ä–æ–≤
    max_history = 50, -- –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ –∏—Å—Ç–æ—Ä–∏–∏
    current_server = game.JobId -- —Ç–µ–∫—É—â–∏–π —Å–µ—Ä–≤–µ—Ä
};

if getgenv().Optimization.state then
    if setfpscap ~= nil then setfpscap(getgenv().Optimization.fps); end
    UserSettings().GameSettings.MasterVolume = 0;
    settings().Rendering.QualityLevel = "Level01";
    game:GetService("RunService"):Set3dRenderingEnabled(not getgenv().Optimization.hide_screen);
end

local players = game:GetService("Players");
local local_player = players.LocalPlayer;
local http_service = game:GetService("HttpService");

-- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –¥–æ–±–∞–≤–ª—è—é –æ–∂–∏–¥–∞–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ nil
local rifts
local function getRifts()
    local rendered = workspace:FindFirstChild("Rendered")
    if rendered then
        rifts = rendered:FindFirstChild("Rifts")
    end
    return rifts ~= nil
end

-- –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ä–∏—Ñ—Ç—ã —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
repeat
    task.wait(2) -- –û–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    print("Waiting for Rifts to load...")
until getRifts()

-- –°–∏—Å—Ç–µ–º–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –≤–µ–±—Ö—É–∫–æ–≤
local cache_file = "rifts_cache.json"
local rifts_cache = {}

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞
local function cleanCache()
    local current_time = os.time()
    local new_cache = {}
    local removed_count = 0
    
    for rift_id, timestamp in pairs(rifts_cache) do
        if current_time - timestamp < 540 then -- 9 –º–∏–Ω—É—Ç (540 —Å–µ–∫—É–Ω–¥)
            new_cache[rift_id] = timestamp
        else
            removed_count = removed_count + 1
        end
    end
    
    rifts_cache = new_cache
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫—ç—à
    pcall(function()
        writefile(cache_file, http_service:JSONEncode(rifts_cache))
    end)
    
    print("Cache cleaned: Removed", removed_count, "items. Current cache size:", #rifts_cache)
end

-- –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—ç—à, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if pcall(function() readfile(cache_file) end) then
    pcall(function()
        rifts_cache = http_service:JSONDecode(readfile(cache_file))
    end)
    cleanCache() -- –û—á–∏—â–∞–µ–º –∫—ç—à –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—á–∏—Å—Ç–∫—É –∫—ç—à–∞ –∫–∞–∂–¥—ã–µ 9 –º–∏–Ω—É—Ç
task.spawn(function()
    while true do
        task.wait(540) -- 9 –º–∏–Ω—É—Ç
        print("Scheduled cache cleanup...")
        cleanCache()
    end
end)

local whitelisted_eggs = { -- —Ç–µ–ø–µ—Ä—å —Ç—É—Ç –º–µ–Ω—è–µ—à—å –≤–µ–±—Ö—É–∫–∏ –ù–ê –ö–ê–ñ–î–û–ï –Ø–ô–¶–û/–°–£–ù–î–£–ö, –≤ luck —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ –∫–∞–≤—ã—á–∫–∞—Ö –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ—à—å –º–Ω–æ–∂–∏—Ç–µ–ª—å —É–¥–∞—á–∏
    ["rainbow-egg"] = {
        webhook = "https://discord.com/api/webhooks/1372211950334906499/_fEmj8oGQ8x4v2kUYeweBlpGdoaCoJ6tIs59BfsBUBeApzBax76neHeWmYbxZyDAXU5f",
        role_id = "", -- ID —Ä–æ–ª–∏ –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞
        luck = { "x25" },
        name = "Rainbow Egg",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529484674240593/latest.png",
        color = 3447003 -- –°–∏–Ω–∏–π —Ü–≤–µ—Ç
    },
    ["nightmare-egg"] = {
        webhook = "https://discord.com/api/webhooks/1372212037693866014/agJ1yjXiLDXZAuiJISTd4kr3cCuCRsXuxRVmx42YqrIXJ9qpUSe7wpM9U3-MTYblwQsk",
        role_id = "",
        luck = { "x25" },
        name = "Nightmare Egg",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529530258063370/latest.png",
        color = 10027008 -- –¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π —Ü–≤–µ—Ç
    },
    ["void-egg"] = {
        webhook = "https://discord.com/api/webhooks/1372211864133701642/nn8YJOJs5BleUhifO-hA0UNI3nIqnzBlHrhFSTOiibxQBGBjjvMTL8bY9jTciCbjUlNL",
        role_id = "",
        luck = { "x25" },
        name = "Void Egg",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529558158573609/latest.png",
        color = 3355443 -- –¢–µ–º–Ω–æ-—Å–µ—Ä—ã–π —Ü–≤–µ—Ç
    },
    ["royal-chest"] = {
        webhook = "https://discord.com/api/webhooks/1372212119629463753/oVq84wDoSWkyoraVjkYsdsxTBRx1bL3Ui1vUv8eAN7FJNb0Fil27LCOEF5BUT-ZP4Fx_",
        role_id = "1371539682713796648",
        name = "Royal Chest",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372530324445073439/latest.png",
        color = 15277667 -- –†–æ–∑–æ–≤—ã–π —Ü–≤–µ—Ç
    },
    ["bubble-rift"] = {
        webhook = "https://discord.com/api/webhooks/1372211352357179432/7E34K-TjOiIBvKwze6XcknyeMZr73rN77eGJ1iinqCs6noRMvmNIwm3rGH4_OemmtSah",
        role_id = "",
        name = "Bubble Rift",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372535605103427698/latest.png", -- –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ–æ—Ç–∫–∞
        color = 3447003 -- –ì–æ–ª—É–±–æ–π —Ü–≤–µ—Ç
    },
    ["mining-egg"] = {
        webhook = "https://discord.com/api/webhooks/1372211772303609896/PinWw2B_ppgV8JsspqCsfFEx8kbK1ozGZEywUFaO5KjTndjm3FvpE_l6V2XO3_XH_amI",
        role_id = "",
        luck = { "x25" },
        name = "Mining Egg",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529638022320148/latest.png",
        color = 7506394 -- –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π —Ü–≤–µ—Ç
    },
    ["cyber-egg"] = {
        webhook = "https://discord.com/api/webhooks/1372211676283273336/Xxiew3FwtHoGld268v6yI46y0AlS9rVlKbjDIIPWLAugNRCO-aN_G7MkXd0z9auQksud",
        role_id = "1371540351361482802",
        luck = { "x25" },
        name = "Cyber Egg",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529595622096977/latest.png",
        color = 16777215 -- –ë–µ–ª—ã–π —Ü–≤–µ—Ç
    },
    ["dice-rift"] = {
        webhook = "https://discord.com/api/webhooks/1372211539167281244/CcP3FgYKV-sZAMmtrtu4z5J5wJJ-SCGUAfavJSvyOc-L4uciHxvIiVmsnCMnpUabrb2s",
        role_id = "1371539732022169601",
        name = "Dice Rift",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372530256669315123/latest.png",
        color = 1 -- –ß–µ—Ä–Ω—ã–π —Ü–≤–µ—Ç
    },
    ["underworld-1"] = {
        webhook = "https://discord.com/api/webhooks/1372273163680874496/vyXpeJcgm6yJFpnIpv9Un-Pt4WOnS8zAmKXk7KuqkCCri8AElQ2LTjx3vZH912KKM7iQ",
        role_id = "1371510979116007545",
        luck = { "x25" },
        name = "Underworld 1",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529424385179789/latest.png",
        color = 16711680 -- –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç
    },
    ["underworld-2"] = {
        webhook = "https://discord.com/api/webhooks/1372273163680874496/vyXpeJcgm6yJFpnIpv9Un-Pt4WOnS8zAmKXk7KuqkCCri8AElQ2LTjx3vZH912KKM7iQ",
        role_id = "1371510979116007545",
        luck = { "x25" },
        name = "Underworld 2",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529424385179789/latest.png",
        color = 16711680 -- –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç
    },
    ["underworld-3"] = {
        webhook = "https://discord.com/api/webhooks/1372273163680874496/vyXpeJcgm6yJFpnIpv9Un-Pt4WOnS8zAmKXk7KuqkCCri8AElQ2LTjx3vZH912KKM7iQ",
        role_id = "1371510979116007545",
        luck = { "x25" },
        name = "Underworld 3",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529424385179789/latest.png",
        color = 16711680 -- –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç
    },
    ["neon-rift"] = {
        webhook = "https://discord.com/api/webhooks/1373379653078745229/5vvR83VC-JYjREcrFeZsSiMJqFbfeUgHAm1tEVzO8GDpo0y5PBBOpksPHScfIDfMl6Bm",
        role_id = "",
        luck = { "x25" },
        name = "Neon rift",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1373381340573073559/latest.png?ex=682a348b&is=6828e30b&hm=41270c56fbd0be25327238970b1176fca6128b540d5d3d2332cc97d2e83fbb00&",
        color = 15277667 -- –†–æ–∑–æ–≤—ã–π –¶–≤–µ—Ç
    }
};

-- –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–ø–µ—Ä–≤—ã–µ 2 –≤—Å–µ–≥–¥–∞ —ç—Ç–∏)
local required_messages = {
    "Underworld Egg is found! ƒ£ƒ£/ easyrift üî•",
    "Best Pet Shop = ƒ£ƒ£/ easyrift üî•"
};

-- –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ 3-–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
local optional_messages = {
    "Best Rift Finder = ƒ£ƒ£/ easyrift üî•",
    "REACH THE LEADERBOARDS USING ƒüƒü/ easyrift üèÜ",
    "SECRETS GIVE-AWAY HAPPENING ƒ£ƒ£/ easyrift üåü",
    "X25 LUCK RIFTS AT ƒ£ƒ£/ easyrift üçÄ"
};

-- –ò–ó–ú–ï–ù–ï–ù–û: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
local join_link = string.format('https://www.roblox.com/games/start?placeId=16302670534&launchData=%d/%s', game.PlaceId, game.JobId);

local parse_time = function(text)
    text = string.lower(string.gsub(text, "^%s*(.-)%s*$", "%1"));
    local number, unit = string.match(text, "(%d+)%s*(%a+)");
    if number == nil or unit == nil then 
        return 0;
    end
    
    number = tonumber(number);
    
    if string.find(unit, "second") then
        return number;
    elseif string.find(unit, "minute") then
        return number * 60;
    elseif string.find(unit, "hour") then
        return number * 3600;
    else
        return 0;
    end
end

local time_to_discorddate = function(time_)
    return string.format("<t:%d:R>", time_);
end

local request = (syn ~= nil and syn.request) or (http ~= nil and http.request) or (fluxus ~= nil and fluxus.request) or http_request or request;
-- –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è notify –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø–∏–Ω–≥–æ–≤
local notify = function(webhook, data)
    local response = request({
        Url = webhook, 
        Body = http_service:JSONEncode(data), 
        Method = "POST", 
        Headers = { ['content-type'] = "application/json" }
    });
    print("Discord webhook response:", response.StatusCode, response.StatusMessage);
    return response;
end

-- –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø–∞ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
-- –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤
local server_history_file = "server_history.json"
local visited_servers = {}
local server_hop_cooldown = false

-- –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–µ—Ä–≤–µ—Ä–æ–≤
local function loadServerHistory()
    if pcall(function() readfile(server_history_file) end) then
        pcall(function()
            local data = http_service:JSONDecode(readfile(server_history_file))
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –∏ –æ—á–∏—â–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–ø–∏—Å–∏
            if type(data) == "table" then
                local current_time = os.time()
                local new_history = {}
                local removed = 0
                
                for jobId, timestamp in pairs(data) do
                    if type(timestamp) == "number" and current_time - timestamp < getgenv().ServerHopSettings.history_ttl then
                        new_history[jobId] = timestamp
                    else
                        removed = removed + 1
                    end
                end
                
                visited_servers = new_history
                print("Loaded server history with", #new_history, "entries,", removed, "expired entries removed")
            end
        end)
    end
    
    -- –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Å–µ—Ä–≤–µ—Ä –≤ –∏—Å—Ç–æ—Ä–∏—é
    visited_servers[game.JobId] = os.time()
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
    saveServerHistory()
end

-- –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–µ—Ä–≤–µ—Ä–æ–≤
local function saveServerHistory()
    pcall(function()
        writefile(server_history_file, http_service:JSONEncode(visited_servers))
        print("Server history saved with", table.count(visited_servers), "entries")
    end)
end

-- –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –∏—Å—Ç–æ—Ä–∏—é
local function addServerToHistory(jobId)
    -- –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ–±–∞ —Å–ø–∏—Å–∫–∞ - –æ—Å–Ω–æ–≤–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
    visited_servers[jobId] = os.time()
    table.insert(getgenv().ServerProtection.last_servers, jobId)
    
    -- –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Å–ø–∏—Å–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
    if #getgenv().ServerProtection.last_servers > getgenv().ServerProtection.max_history then
        table.remove(getgenv().ServerProtection.last_servers, 1)
    end
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏
    saveServerHistory()
end

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—Å–µ—â–∞–ª–∏ –ª–∏ –º—ã —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–∞–≤–Ω–æ
local function wasServerVisitedRecently(jobId)
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å–µ—Ä–≤–µ—Ä
    if jobId == game.JobId or jobId == getgenv().ServerProtection.current_server then
        print("Skipping current server:", jobId)
        return true
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–µ—Ä–≤–µ—Ä–æ–≤
    if visited_servers[jobId] then
        local time_since_visit = os.time() - visited_servers[jobId]
        if time_since_visit < getgenv().ServerHopSettings.history_ttl then
            print("Server was visited", time_since_visit, "seconds ago:", jobId)
            return true
        end
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å–µ—Ä–≤–µ—Ä–æ–≤ (–¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞—â–∏—Ç—ã)
    for _, id in ipairs(getgenv().ServerProtection.last_servers) do
        if id == jobId then
            print("Server in recent history:", jobId)
            return true
        end
    end
    
    return false
end

-- –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
loadServerHistory()

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø–∞
local function serverhop()
    if server_hop_cooldown then 
        print("Serverhop on cooldown, skipping...")
        return 
    end
    
    server_hop_cooldown = true
    
    -- –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Ä–∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    if getgenv().ServerHopSettings.use_random_offset then
        local random_delay = math.random(3, 5)
        print("Adding random delay before server hop:", random_delay, "seconds")
        wait(random_delay)
    end
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø–∞
    getgenv().ServerHopSettings.last_hop_time = os.time()
    print("Initiating server hop at:", os.date("%H:%M:%S", getgenv().ServerHopSettings.last_hop_time))
    
    -- –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—ã—Ç–∞—Ç—å—Å—è –Ω–∞–π—Ç–∏ —Å–µ—Ä–≤–µ—Ä
    local function attemptServerHop()
        local servers = {}
        local cursor = ""
        local tries = 0
        
        -- –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        repeat
            tries = tries + 1
            local success, result = pcall(function()
                local api_url = ("https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Desc&limit=100"):format(game.PlaceId)
                if cursor ~= "" then
                    api_url = api_url .. "&cursor=" .. cursor
                end
                return http_service:JSONDecode(game:HttpGet(api_url))
            end)
            
            if success and result and result.data then
                cursor = result.nextPageCursor or ""
                
                -- –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã
                for _, server in pairs(result.data) do
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞—à–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
                    if server.playing >= getgenv().ServerHopSettings.min_players and 
                       server.playing <= getgenv().ServerHopSettings.max_players and
                       server.maxPlayers > server.playing and
                       server.id ~= game.JobId and
                       not wasServerVisitedRecently(server.id) then
                        
                        -- –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä —Å –≤–µ—Å–æ–º, –∑–∞–≤–∏—Å—è—â–∏–º –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–≥—Ä–æ–∫–æ–≤
                        -- –°–µ—Ä–≤–µ—Ä—ã —Å –º–µ–Ω—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏–≥—Ä–æ–∫–æ–≤ –ø–æ–ª—É—á–∞—é—Ç –±–æ–ª—å—à–∏–π –≤–µ—Å
                        local weight = 40 - server.playing
                        for i = 1, weight do
                            table.insert(servers, {
                                id = server.id,
                                playing = server.playing
                            })
                        end
                    end
                end
            else
                print("Error fetching servers:", result)
                wait(1)
            end
        until #servers >= 10 or tries >= 5 or cursor == "" -- –ò—â–µ–º –¥–æ 5 —Å—Ç—Ä–∞–Ω–∏—Ü –∏–ª–∏ –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–º 10+ —Å–µ—Ä–≤–µ—Ä–æ–≤
        
        -- –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
        if #servers > 0 then
            -- –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ä–≤–µ—Ä —Å —É—á–µ—Ç–æ–º –≤–µ—Å–∞
            local selected = servers[math.random(1, #servers)]
            print("Selected server with " .. selected.playing .. " players, ID: " .. selected.id)
            
            -- –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –∏—Å—Ç–æ—Ä–∏—é –î–û —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
            addServerToHistory(selected.id)
            
            -- –ü—ã—Ç–∞–µ–º—Å—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è
            wait(1) -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª–µ
            pcall(function()
                game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, selected.id, game.Players.LocalPlayer)
            end)
            
            -- –ñ–¥–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, —É—Å–ø–µ—à–Ω–∞—è –ª–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è
            wait(8)
            
            -- –ï—Å–ª–∏ –º—ã –≤—Å–µ –µ—â–µ –∑–¥–µ—Å—å, –∑–Ω–∞—á–∏—Ç —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑
            print("Teleport may have failed, trying an alternative server...")
            attemptServerHop()
            
            -- –í—ã—Ö–æ–¥ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
            return true
        else
            print("No suitable servers found, trying generic teleport")
            -- –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—É—é —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—é
            pcall(function()
                game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
            end)
            return false
        end
    end
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    local success = pcall(function() 
        attemptServerHop() 
    end)
    
    -- –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
    if not success then
        print("Server hop function failed, using fallback teleport")
        pcall(function()
            game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
        end)
    end
    
    -- –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫—É–ª–¥–∞—É–Ω —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
    task.spawn(function()
        task.wait(10)
        server_hop_cooldown = false
    end)
end

task.spawn(function() -- anti afk (xz zachem, poidet)
    for _,v in pairs(getconnections(local_player.Idled)) do v:Disable() end
    for _,v in pairs(getconnections(game:GetService("UserInputService").WindowFocused)) do v:Disable() end
    for _,v in pairs(getconnections(game:GetService("UserInputService").WindowFocusReleased)) do v:Disable() end
end)

-- –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤ 3 —Å–µ–∫—É–Ω–¥—ã
task.spawn(function()
    -- –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã —Å–Ω–∞—á–∞–ª–∞ —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∏–ª —Ä–∏—Ñ—Ç—ã
    task.wait(5)
    
    local channel
    local success = pcall(function()
        channel = game:GetService("TextChatService"):WaitForChild("TextChannels"):WaitForChild("RBXGeneral", 10)
    end)
    
    if not success or not channel then
        print("Failed to get chat channel, trying alternative method")
        -- –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        pcall(function()
            local ChatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
            if ChatEvents then
                local SayMessageRequest = ChatEvents:FindFirstChild("SayMessageRequest")
                if SayMessageRequest then
                    channel = {
                        SendAsync = function(_, message)
                            SayMessageRequest:FireServer(message, "All")
                            return true
                        end
                    }
                    success = true
                end
            end
        end)
    end
    
    if not success or not channel then
        print("Failed to initialize chat system, will not send messages")
        return
    end
    
    -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–≤–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤ 3 —Å–µ–∫—É–Ω–¥—ã
    local messages_sent = 0
    
    for i, message in ipairs(required_messages) do
        local sent = pcall(function()
            channel:SendAsync(message)
        end)
        
        if sent then
            messages_sent = messages_sent + 1
            print("Sent message " .. i .. ": " .. message)
        else
            print("Failed to send message: " .. message)
        end
        
        -- –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        task.wait(3)
    end
    
    -- –°–ª—É—á–∞–π–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–µ—Ç—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if math.random() > 0.3 then -- 70% —à–∞–Ω—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
        local optional_message = optional_messages[math.random(1, #optional_messages)]
        pcall(function()
            channel:SendAsync(optional_message)
            messages_sent = messages_sent + 1
            print("Sent optional message: " .. optional_message)
        end)
    end
    
    print("Total messages sent: " .. messages_sent)
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∏—Ñ—Ç–æ–≤
    task.wait(2) -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    serverhop()
end)

do
    local rifts_found = 0 -- —Å—á–µ—Ç—á–∏–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ä–∏—Ñ—Ç–æ–≤
    local rifts_sent = 0  -- —Å—á–µ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤–µ–±—Ö—É–∫–æ–≤
    
    for _, rift in pairs(rifts:GetChildren()) do
        if not rift:IsA("Model") or not whitelisted_eggs[rift.Name] then
            continue;
        end
        
        rifts_found = rifts_found + 1
        
        local data = whitelisted_eggs[rift.Name];
        local luck = "None";
        local gui
        
        -- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ –Ω–∞ nil –∏ –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        local display = rift:FindFirstChild("Display")
        if display then
            gui = display:FindFirstChildOfClass("SurfaceGui")
            if data.luck ~= nil then
                if gui == nil then
                    repeat 
                        task.wait(0.5)
                        gui = display:FindFirstChildOfClass("SurfaceGui")
                    until gui ~= nil or task.wait(5) -- —Ç–∞–π–º–∞—É—Ç 5 —Å–µ–∫—É–Ω–¥ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ GUI –Ω–µ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
                end
                
                if gui and gui:FindFirstChild("Icon") and gui.Icon:FindFirstChild("Luck") then
                    if not table.find(data.luck, gui.Icon.Luck.Text) then
                        continue
                    end
                    luck = gui.Icon.Luck.Text
                else
                    continue -- –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –Ω–µ—Ç –Ω—É–∂–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
                end
            end
        else
            continue -- –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –Ω–µ—Ç Display
        end
        
        if not gui or not gui:FindFirstChild("Timer") then
            continue -- –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –Ω–µ—Ç —Ç–∞–π–º–µ—Ä–∞
        end

        -- –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Ä–∏—Ñ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ —Ç–∏–ø–∞ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (—Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º)
        local position = rift:GetPivot().Position
        local rift_id = string.format("%s_%d_%d_%d", 
            rift.Name, 
            math.floor(position.X), 
            math.floor(position.Y), 
            math.floor(position.Z))
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —ç—Ç–æ—Ç —Ä–∏—Ñ—Ç —É–∂–µ –Ω–∞–π–¥–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä–∞–Ω–µ–µ
        if rifts_cache[rift_id] then
            print("Rift already reported:", rift_id)
            continue
        end
        
        local time = os.time() + parse_time(gui.Timer.Text);
        local discord_time = time_to_discorddate(time);
        local height = math.floor(rift:GetPivot().Position.Y) - 4;
        
        -- –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Å–ø—Ä–∞–≤–∞
        local message = {
            content = data.role_id and data.role_id ~= "" and ("<@&" .. data.role_id .. ">") or "",
            embeds = {
                {
                    title = data.name .. " has been found!",
                    description = "**[üîó Click here to join](" .. join_link .. ")**\n\nü™ÑTutorial how to join pinned in https://discord.com/channels/1279491047616938005/1369315912049492069",
                    fields = {
                        {
                            name = "‚è≤ Expires in",
                            value = discord_time,
                            inline = true
                        },
                        {
                            name = "üìè Height",
                            value = tostring(height),
                            inline = true
                        },
                        {
                            name = "üë§ Players",
                            value = tostring(#players:GetPlayers()),
                            inline = true
                        },
                        {
                            name = "üçÄ Luck",
                            value = luck
                        }
                    },
                    color = data.color or 4508791, -- –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–≤–µ—Ç –¥–ª—è —Ä–∏—Ñ—Ç–∞ –∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π
                    thumbnail = {
                        url = data.image
                    },
                    footer = {
                        text = "gg/easyrift ‚Ä¢ " .. os.date("%H:%M", os.time())
                    }
                }
            }
        }

        -- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∏—Ñ—Ç –≤ –∫—ç—à–µ —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
        rifts_cache[rift_id] = os.time()
        
        -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫—ç—à
        pcall(function()
            writefile(cache_file, http_service:JSONEncode(rifts_cache))
        end)
        
        notify(data.webhook, message);
        rifts_sent = rifts_sent + 1
        
        -- –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏ –≤–µ–±—Ö—É–∫–æ–≤
        task.wait(0.5)
    end
    
    print("Rifts found:", rifts_found, "Webhooks sent:", rifts_sent)
    
    -- –ù–µ –¥–µ–ª–∞–µ–º –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø –∑–¥–µ—Å—å, —Ç–∞–∫ –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–ø—É—Å—Ç–∏—Ç –µ–≥–æ
end

-- –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞, –µ—Å–ª–∏ –ø–æ –∫–∞–∫–∏–º-—Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º –Ω–∏ –æ–¥–Ω–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ
task.spawn(function()
    task.wait(30)
    if os.time() - getgenv().ServerHopSettings.last_hop_time >= 30 then
        print("Forced server hop after 30 seconds")
        serverhop()
    end
end)

-- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∏–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
game:GetService("CoreGui"):FindFirstChild("RobloxPromptGui"):FindFirstChild("promptOverlay").ChildAdded:Connect(function(child) -- –ø—Ä–∏ –∫–∏–∫–µ –∏–≥—Ä–æ–π
    if child.Name == "ErrorPrompt" then
        print("Game kick detected, starting server hop")
        serverhop();
    end
end)

-- –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É —Å –ø–æ–¥—Å—á–µ—Ç–æ–º —Ç–∞–±–ª–∏—Ü
if not table.count then
    table.count = function(tbl)
        local count = 0
        for _ in pairs(tbl) do
            count = count + 1
        end
        return count
    end
end

-- –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
print("RiftFinder initialized successfully!")
print("Current server: " .. game.JobId)
print("Server protection enabled, tracking up to " .. getgenv().ServerProtection.max_history .. " servers")
print("Server history TTL: " .. getgenv().ServerHopSettings.history_ttl .. " seconds")
