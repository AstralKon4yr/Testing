-- [[ –º–µ–Ω—è–π —ç—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ ]]
getgenv().Optimization = {
    state = true, -- –≤–∫–ª/–≤—ã–∫–ª
    hide_screen = true, -- –≤—ã–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ—Ä–∏—Å–æ–≤–∫—É –≥—Ä–∞—Ñ–∏–∫–∏, –±—É—Å—Ç–∏—Ç –∂–µ—Å—Ç–æ—á–∞–π—à–µ —Ñ–ø—Å (–≤–∫–ª/–≤—ã–∫–ª)
    fps = 9
};

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø–∞ –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
getgenv().ServerHopSettings = {
    interval = 15, -- —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
    last_hop_time = os.time()
};

if getgenv().Optimization.state then
    if setfpscap ~= nil then setfpscap(getgenv().Optimization.fps); end
    UserSettings().GameSettings.MasterVolume = 0;
    settings().Rendering.QualityLevel = "Level01";
    game:GetService("RunService"):Set3dRenderingEnabled(not getgenv().Optimization.hide_screen);
end

local players = game:GetService("Players");
local local_player = players.LocalPlayer;
local http_service = game:GetService("HttpService");

-- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –¥–æ–±–∞–≤–ª—è—é –æ–∂–∏–¥–∞–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ nil
local rifts
local function getRifts()
    local rendered = workspace:FindFirstChild("Rendered")
    if rendered then
        rifts = rendered:FindFirstChild("Rifts")
    end
    return rifts ~= nil
end

-- –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ä–∏—Ñ—Ç—ã —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
repeat
    task.wait(2) -- –û–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    print("Waiting for Rifts to load...")
until getRifts()

-- –°–∏—Å—Ç–µ–º–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –≤–µ–±—Ö—É–∫–æ–≤
local cache_file = "rifts_cache.json"
local rifts_cache = {}

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞
local function cleanCache()
    local current_time = os.time()
    local new_cache = {}
    local removed_count = 0
    
    for rift_id, timestamp in pairs(rifts_cache) do
        if current_time - timestamp < 540 then -- 9 –º–∏–Ω—É—Ç (540 —Å–µ–∫—É–Ω–¥)
            new_cache[rift_id] = timestamp
        else
            removed_count = removed_count + 1
        end
    end
    
    rifts_cache = new_cache
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫—ç—à
    pcall(function()
        writefile(cache_file, http_service:JSONEncode(rifts_cache))
    end)
    
    print("Cache cleaned: Removed", removed_count, "items. Current cache size:", #rifts_cache)
end

-- –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—ç—à, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if pcall(function() readfile(cache_file) end) then
    pcall(function()
        rifts_cache = http_service:JSONDecode(readfile(cache_file))
    end)
    cleanCache() -- –û—á–∏—â–∞–µ–º –∫—ç—à –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—á–∏—Å—Ç–∫—É –∫—ç—à–∞ –∫–∞–∂–¥—ã–µ 9 –º–∏–Ω—É—Ç
task.spawn(function()
    while true do
        task.wait(540) -- 9 –º–∏–Ω—É—Ç
        print("Scheduled cache cleanup...")
        cleanCache()
    end
end)

local whitelisted_eggs = { -- —Ç–µ–ø–µ—Ä—å —Ç—É—Ç –º–µ–Ω—è–µ—à—å –≤–µ–±—Ö—É–∫–∏ –ù–ê –ö–ê–ñ–î–û–ï –Ø–ô–¶–û/–°–£–ù–î–£–ö, –≤ luck —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ –∫–∞–≤—ã—á–∫–∞—Ö –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ—à—å –º–Ω–æ–∂–∏—Ç–µ–ª—å —É–¥–∞—á–∏
    ["rainbow-egg"] = {
        webhook = "https://discord.com/api/webhooks/1372211950334906499/_fEmj8oGQ8x4v2kUYeweBlpGdoaCoJ6tIs59BfsBUBeApzBax76neHeWmYbxZyDAXU5f",
        role_id = "", -- ID —Ä–æ–ª–∏ –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞
        luck = { "x25" },
        name = "Rainbow Egg",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529484674240593/latest.png",
        color = 3447003 -- –°–∏–Ω–∏–π —Ü–≤–µ—Ç
    },
    ["nightmare-egg"] = {
        webhook = "https://discord.com/api/webhooks/1372212037693866014/agJ1yjXiLDXZAuiJISTd4kr3cCuCRsXuxRVmx42YqrIXJ9qpUSe7wpM9U3-MTYblwQsk",
        role_id = "",
        luck = { "x25" },
        name = "Nightmare Egg",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529530258063370/latest.png",
        color = 10027008 -- –¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π —Ü–≤–µ—Ç
    },
    ["void-egg"] = {
        webhook = "https://discord.com/api/webhooks/1372211864133701642/nn8YJOJs5BleUhifO-hA0UNI3nIqnzBlHrhFSTOiibxQBGBjjvMTL8bY9jTciCbjUlNL",
        role_id = "",
        luck = { "x25" },
        name = "Void Egg",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529558158573609/latest.png",
        color = 3355443 -- –¢–µ–º–Ω–æ-—Å–µ—Ä—ã–π —Ü–≤–µ—Ç
    },
    ["royal-chest"] = {
        webhook = "https://discord.com/api/webhooks/1372212119629463753/oVq84wDoSWkyoraVjkYsdsxTBRx1bL3Ui1vUv8eAN7FJNb0Fil27LCOEF5BUT-ZP4Fx_",
        role_id = "1371539682713796648",
        name = "Royal Chest",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372530324445073439/latest.png",
        color = 15277667 -- –†–æ–∑–æ–≤—ã–π —Ü–≤–µ—Ç
    },
    ["bubble-rift"] = {
        webhook = "https://discord.com/api/webhooks/1372211352357179432/7E34K-TjOiIBvKwze6XcknyeMZr73rN77eGJ1iinqCs6noRMvmNIwm3rGH4_OemmtSah",
        role_id = "",
        name = "Bubble Rift",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372535605103427698/latest.png", -- –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ–æ—Ç–∫–∞
        color = 3447003 -- –ì–æ–ª—É–±–æ–π —Ü–≤–µ—Ç
    },
    ["mining-egg"] = {
        webhook = "https://discord.com/api/webhooks/1372211772303609896/PinWw2B_ppgV8JsspqCsfFEx8kbK1ozGZEywUFaO5KjTndjm3FvpE_l6V2XO3_XH_amI",
        role_id = "",
        luck = { "x25" },
        name = "Mining Egg",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529638022320148/latest.png",
        color = 7506394 -- –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π —Ü–≤–µ—Ç
    },
    ["cyber-egg"] = {
        webhook = "https://discord.com/api/webhooks/1372211676283273336/Xxiew3FwtHoGld268v6yI46y0AlS9rVlKbjDIIPWLAugNRCO-aN_G7MkXd0z9auQksud",
        role_id = "1371540351361482802",
        luck = { "x25" },
        name = "Cyber Egg",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529595622096977/latest.png",
        color = 16777215 -- –ë–µ–ª—ã–π —Ü–≤–µ—Ç
    },
    ["dice-rift"] = {
        webhook = "https://discord.com/api/webhooks/1372211539167281244/CcP3FgYKV-sZAMmtrtu4z5J5wJJ-SCGUAfavJSvyOc-L4uciHxvIiVmsnCMnpUabrb2s",
        role_id = "1371539732022169601",
        name = "Dice Rift",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372530256669315123/latest.png",
        color = 1 -- –ß–µ—Ä–Ω—ã–π —Ü–≤–µ—Ç
    },
    ["underworld-1"] = {
        webhook = "https://discord.com/api/webhooks/1372273163680874496/vyXpeJcgm6yJFpnIpv9Un-Pt4WOnS8zAmKXk7KuqkCCri8AElQ2LTjx3vZH912KKM7iQ",
        role_id = "1371510979116007545",
        luck = { "x25" },
        name = "Underworld 1",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529424385179789/latest.png",
        color = 16711680 -- –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç
    },
    ["underworld-2"] = {
        webhook = "https://discord.com/api/webhooks/1372273163680874496/vyXpeJcgm6yJFpnIpv9Un-Pt4WOnS8zAmKXk7KuqkCCri8AElQ2LTjx3vZH912KKM7iQ",
        role_id = "1371510979116007545",
        luck = { "x25" },
        name = "Underworld 2",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529424385179789/latest.png",
        color = 16711680 -- –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç
    },
    ["underworld-3"] = {
        webhook = "https://discord.com/api/webhooks/1372273163680874496/vyXpeJcgm6yJFpnIpv9Un-Pt4WOnS8zAmKXk7KuqkCCri8AElQ2LTjx3vZH912KKM7iQ",
        role_id = "1371510979116007545",
        luck = { "x25" },
        name = "Underworld 3",
        image = "https://cdn.discordapp.com/attachments/811315406299725904/1372529424385179789/latest.png",
        color = 16711680 -- –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç
    }
};
local spam_messages = {
    "Best Rift Finder = ƒ£ƒ£/ easyrift üî•",
    "Underworld Egg is found! ƒ£ƒ£/ easyrift üî•",
    "Best Pet Shop = ƒ£ƒ£/ easyrift üî•",
    "REACH THE LEADERBOARDS USING ƒüƒü/ easyrift üèÜ",
    "SECRETS GIVE-AWAY HAPPENING ƒ£ƒ£/ easyrift üåü",
    "X25 LUCK RIFTS AT ƒ£ƒ£/ easyrift üçÄ"
};

-- –ò–ó–ú–ï–ù–ï–ù–û: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
local join_link = string.format('https://www.roblox.com/games/start?placeId=16302670534&launchData=%d/%s', game.PlaceId, game.JobId);

local parse_time = function(text)
    text = string.lower(string.gsub(text, "^%s*(.-)%s*$", "%1"));
    local number, unit = string.match(text, "(%d+)%s*(%a+)");
    if number == nil or unit == nil then 
        return 0;
    end
    
    number = tonumber(number);
    
    if string.find(unit, "second") then
        return number;
    elseif string.find(unit, "minute") then
        return number * 60;
    elseif string.find(unit, "hour") then
        return number * 3600;
    else
        return 0;
    end
end

local time_to_discorddate = function(time_)
    return string.format("<t:%d:R>", time_);
end

local request = (syn ~= nil and syn.request) or (http ~= nil and http.request) or (fluxus ~= nil and fluxus.request) or http_request or request;
-- –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è notify –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø–∏–Ω–≥–æ–≤
local notify = function(webhook, data)
    local response = request({
        Url = webhook, 
        Body = http_service:JSONEncode(data), 
        Method = "POST", 
        Headers = { ['content-type'] = "application/json" }
    });
    print("Discord webhook response:", response.StatusCode, response.StatusMessage);
    return response;
end

-- –ù–û–í–´–ô –ö–û–î: –ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–∞–±–æ—á–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø–∞
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false

-- –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ—Å–µ—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
local function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø–∞
local function serverhop()
    print("Initiating server hop at:", os.date("%H:%M:%S", os.time()))
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø–∞
    getgenv().ServerHopSettings.last_hop_time = os.time()
    
    -- –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é TPReturner –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    pcall(function()
        TPReturner()
        if foundAnything ~= "" then
            TPReturner()
        end
    end)
    
    -- –ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ TPReturner –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π —Ç–µ–ª–µ–ø–æ—Ä—Ç
    wait(5) -- –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
    pcall(function()
        game:GetService("TeleportService"):Teleport(PlaceID, game.Players.LocalPlayer)
    end)
end

task.spawn(function() -- anti afk (xz zachem, poidet)
    for _,v in pairs(getconnections(local_player.Idled)) do v:Disable() end
    for _,v in pairs(getconnections(game:GetService("UserInputService").WindowFocused)) do v:Disable() end
    for _,v in pairs(getconnections(game:GetService("UserInputService").WindowFocusReleased)) do v:Disable() end
end)

task.spawn(function()
    local channel = game:GetService("TextChatService"):WaitForChild("TextChannels"):WaitForChild("RBXGeneral");
    local time = 1;
    while task.wait() do
        channel:SendAsync(spam_messages[Random.new(tick()):NextInteger(1, #spam_messages)]);
        time += 2;
        if time > 6 then
            time = 1;
        end

        task.wait(time);
    end
end)

-- –°–µ—Ä–≤–µ—Ä—Ö–æ–ø –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
task.spawn(function()
    -- –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –Ω–∞—á–∞–ª—å–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–ø—Ä—ã–≥–∏–≤–∞—Ç—å —Å—Ä–∞–∑—É
    task.wait(3)
    
    while true do
        task.wait(1) -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è
        local current_time = os.time()
        local elapsed_time = current_time - getgenv().ServerHopSettings.last_hop_time
        
        if elapsed_time >= getgenv().ServerHopSettings.interval then
            print("Server hop interval reached:", elapsed_time, "seconds")
            serverhop()
        end
    end
end)

do
    local rifts_found = 0 -- —Å—á–µ—Ç—á–∏–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ä–∏—Ñ—Ç–æ–≤
    local rifts_sent = 0  -- —Å—á–µ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤–µ–±—Ö—É–∫–æ–≤
    
    for _, rift in pairs(rifts:GetChildren()) do
        if not rift:IsA("Model") or not whitelisted_eggs[rift.Name] then
            continue;
        end
        
        rifts_found = rifts_found + 1
        
        local data = whitelisted_eggs[rift.Name];
        local luck = "None";
        local gui
        
        -- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ –Ω–∞ nil –∏ –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        local display = rift:FindFirstChild("Display")
        if display then
            gui = display:FindFirstChildOfClass("SurfaceGui")
            if data.luck ~= nil then
                if gui == nil then
                    repeat 
                        task.wait(0.5)
                        gui = display:FindFirstChildOfClass("SurfaceGui")
                    until gui ~= nil or task.wait(5) -- —Ç–∞–π–º–∞—É—Ç 5 —Å–µ–∫—É–Ω–¥ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ GUI –Ω–µ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
                end
                
                if gui and gui:FindFirstChild("Icon") and gui.Icon:FindFirstChild("Luck") then
                    if not table.find(data.luck, gui.Icon.Luck.Text) then
                        continue
                    end
                    luck = gui.Icon.Luck.Text
                else
                    continue -- –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –Ω–µ—Ç –Ω—É–∂–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
                end
            end
        else
            continue -- –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –Ω–µ—Ç Display
        end
        
        if not gui or not gui:FindFirstChild("Timer") then
            continue -- –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –Ω–µ—Ç —Ç–∞–π–º–µ—Ä–∞
        end

        -- –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Ä–∏—Ñ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ —Ç–∏–ø–∞ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (—Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º)
        local position = rift:GetPivot().Position
        local rift_id = string.format("%s_%d_%d_%d", 
            rift.Name, 
            math.floor(position.X), 
            math.floor(position.Y), 
            math.floor(position.Z))
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —ç—Ç–æ—Ç —Ä–∏—Ñ—Ç —É–∂–µ –Ω–∞–π–¥–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä–∞–Ω–µ–µ
        if rifts_cache[rift_id] then
            print("Rift already reported:", rift_id)
            continue
        end
        
        local time = os.time() + parse_time(gui.Timer.Text);
        local discord_time = time_to_discorddate(time);
        local height = math.floor(rift:GetPivot().Position.Y) - 4;
        
        -- –§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Å–ø—Ä–∞–≤–∞
        local message = {
            content = data.role_id and data.role_id ~= "" and ("<@&" .. data.role_id .. ">") or "",
            embeds = {
                {
                    title = data.name .. " has been found!",
                    description = "**[üîó Click here to join](" .. join_link .. ")**\n\nü™ÑTutorial how to join pinned in https://discord.com/channels/1279491047616938005/1369315912049492069",
                    fields = {
                        {
                            name = "‚è≤ Expires in",
                            value = discord_time,
                            inline = true
                        },
                        {
                            name = "üìè Height",
                            value = tostring(height),
                            inline = true
                        },
                        {
                            name = "üë§ Players",
                            value = tostring(#players:GetPlayers()),
                            inline = true
                        },
                        {
                            name = "üçÄ Luck",
                            value = luck
                        }
                    },
                    color = data.color or 4508791,
                    thumbnail = {
                        url = data.image
                    },
                    footer = {
                        text = "gg/easyrift ‚Ä¢ " .. os.date("%H:%M", os.time())
                    }
                }
            }
        }

        -- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∏—Ñ—Ç –≤ –∫—ç—à–µ —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
        rifts_cache[rift_id] = os.time()
        
        -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫—ç—à
        pcall(function()
            writefile(cache_file, http_service:JSONEncode(rifts_cache))
        end)
        
        notify(data.webhook, message);
        rifts_sent = rifts_sent + 1
        
        -- –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏ –≤–µ–±—Ö—É–∫–æ–≤
        task.wait(0.5)
    end
    
    print("Rifts found:", rifts_found, "Webhooks sent:", rifts_sent)
    
    -- –ù–µ –¥–µ–ª–∞–µ–º –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø –∑–¥–µ—Å—å, —Ç–∞–∫ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–π–º–µ—Ä
end

-- –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä—Ö–æ–ø —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞, –µ—Å–ª–∏ –ø–æ –∫–∞–∫–∏–º-—Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º –æ–±—ã—á–Ω—ã–π —Ç–∞–π–º–µ—Ä –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
task.spawn(function()
    task.wait(30)
    if os.time() - getgenv().ServerHopSettings.last_hop_time >= 30 then
        print("Forced server hop after 30 seconds")
        serverhop()
    end
end)

game:GetService("CoreGui"):FindFirstChild("RobloxPromptGui"):FindFirstChild("promptOverlay").ChildAdded:Connect(function(child) -- –ø—Ä–∏ –∫–∏–∫–µ –∏–≥—Ä–æ–π
    serverhop();
end)
